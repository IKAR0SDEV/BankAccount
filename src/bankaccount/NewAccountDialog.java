package bankaccount;

import javax.swing.*;
import java.util.*;
import java.text.*;
/**
 *
 * @author khali
 */
public class NewAccountDialog extends javax.swing.JDialog {
    private Bank bank;
    private AccountOwner accountOwner;

    /** Creates new form NewAccountDialog */
    public NewAccountDialog(java.awt.Frame parent, boolean modal, Bank bank) {
        super(parent, modal);
        initComponents();
        //Set location of the dialog on top the MainMenu
        setLocationRelativeTo(parent);
        this.bank = bank;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        userNameLabel = new javax.swing.JLabel();
        userNameField = new javax.swing.JTextField();
        addressLabel = new javax.swing.JLabel();
        addressField = new javax.swing.JTextField();
        postcodeLabel = new javax.swing.JLabel();
        postcodeField = new javax.swing.JTextField();
        initialBalanceLabel = new javax.swing.JLabel();
        initialBalanceField = new javax.swing.JTextField();
        cancelButton = new javax.swing.JButton();
        submitButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create new account");
        getContentPane().setLayout(new java.awt.GridLayout(5, 2, 5, 5));

        userNameLabel.setText("Name");
        getContentPane().add(userNameLabel);

        userNameField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameFieldActionPerformed(evt);
            }
        });
        userNameField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                userNameFieldKeyTyped(evt);
            }
        });
        getContentPane().add(userNameField);

        addressLabel.setText("Address");
        getContentPane().add(addressLabel);
        getContentPane().add(addressField);

        postcodeLabel.setText("Postcode");
        getContentPane().add(postcodeLabel);
        getContentPane().add(postcodeField);

        initialBalanceLabel.setText("Initial Balance");
        getContentPane().add(initialBalanceLabel);

        initialBalanceField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                initialBalanceFieldKeyTyped(evt);
            }
        });
        getContentPane().add(initialBalanceField);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton);

        submitButton.setText("Submit");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });
        getContentPane().add(submitButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void userNameFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameFieldActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Close the current dialog
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        String userName = "", address = "", postcode = "", date;
        double initialBalance = 0;
        // Verify username
        if(userNameField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please Enter Your Name", "Invalid Input!", JOptionPane.ERROR_MESSAGE);
            return; // error occured; exit the method early
            
        } else {
            userName = userNameField.getText();
        }
        // Verify address
        if(addressField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please Enter Your Address", "Invalid Input!", JOptionPane.ERROR_MESSAGE);
            return; // error occured; exit the method early
        } else {
            address = addressField.getText();
        }
        // Verify postcode
        if(postcodeField.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Please Enter Your postcode", "Invalid Input!", JOptionPane.ERROR_MESSAGE);
            return; // error occured; exit the method early
        } else {
            postcode = postcodeField.getText();
        }
        // Verify initial deposit
        if (initialBalanceField.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please Enter Your Initial Balance", "Invalid Input!", JOptionPane.ERROR_MESSAGE);
            return; // error occured; exit the method early
        } else {
                initialBalance = Double.parseDouble(initialBalanceField.getText());
   
        }
        // Get current date
        DateFormat df = new SimpleDateFormat("dd/MM/yy HH:mm");
        Calendar calObj = Calendar.getInstance();
        date = df.format(calObj.getTime());
        
        Account account = null;
        account = new Account(initialBalance);
        
        
        accountOwner = new AccountOwner(userName, address, postcode, date, account);
        //Add username, address, postcode, date and account to Arraylist
        bank.addAccountOwner(accountOwner);
        
        // Show new account info
        JOptionPane.showMessageDialog(this, "Username: " + userName + "\n Postcode: " + postcode + "\n Address: " + address + "\n Account Number: " + accountOwner.getAccount().getAccountNumber(), "New Account created!", JOptionPane.INFORMATION_MESSAGE);
        
        this.dispose();
    }//GEN-LAST:event_submitButtonActionPerformed

    private void initialBalanceFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_initialBalanceFieldKeyTyped
        //This allows only digits 0-9 to be entered
        char enter = evt.getKeyChar();
        if(!(Character.isDigit(enter))){
            evt.consume();
        }
    }//GEN-LAST:event_initialBalanceFieldKeyTyped

    private void userNameFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameFieldKeyTyped
        //Accept only non numerical input
        char enter = evt.getKeyChar();
        if(Character.isDigit(enter)){
            evt.consume();
        }
    }//GEN-LAST:event_userNameFieldKeyTyped


    AccountOwner getAccountOwner() {
        return accountOwner;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addressField;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField initialBalanceField;
    private javax.swing.JLabel initialBalanceLabel;
    private javax.swing.JTextField postcodeField;
    private javax.swing.JLabel postcodeLabel;
    private javax.swing.JButton submitButton;
    private javax.swing.JTextField userNameField;
    private javax.swing.JLabel userNameLabel;
    // End of variables declaration//GEN-END:variables

    
}
