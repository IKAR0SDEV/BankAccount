package bankaccount;

import javax.swing.table.*;
import javax.swing.*;

/**
 *
 * @author khali
 */
public class MainMenu extends javax.swing.JFrame {
    private Bank bank;

    /** Creates new form MainMenu */
    public MainMenu() {
        initComponents();
        setLocationRelativeTo(null);
        bank = new Bank();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        addAccount = new javax.swing.JButton();
        operationButton = new javax.swing.JButton();
        showTransactions = new javax.swing.JButton();
        deleteAccount = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exit = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LonMet Banking App");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        addAccount.setText("Add Account");
        addAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addAccountActionPerformed(evt);
            }
        });

        operationButton.setText("Operation (deposit/withdraw)");
        operationButton.setEnabled(false);
        operationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                operationButtonActionPerformed(evt);
            }
        });

        showTransactions.setText("Show Transactions");
        showTransactions.setEnabled(false);
        showTransactions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showTransactionsActionPerformed(evt);
            }
        });

        deleteAccount.setText("Delete Account");
        deleteAccount.setEnabled(false);
        deleteAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteAccountActionPerformed(evt);
            }
        });

        table.setAutoCreateRowSorter(true);
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Address", "Postcode", "Account Number", "Balance", "Account Open Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        table.getTableHeader().setReorderingAllowed(false);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setResizable(false);
            table.getColumnModel().getColumn(1).setResizable(false);
            table.getColumnModel().getColumn(2).setResizable(false);
            table.getColumnModel().getColumn(3).setResizable(false);
            table.getColumnModel().getColumn(4).setResizable(false);
            table.getColumnModel().getColumn(5).setResizable(false);
        }

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(addAccount)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(operationButton)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(showTransactions)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(deleteAccount)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(addAccount)
                    .add(operationButton)
                    .add(showTransactions)
                    .add(deleteAccount))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        fileMenu.setText("File");

        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        fileMenu.add(exit);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0); //Close the program
    }//GEN-LAST:event_exitActionPerformed

    //Open the page to create a new account
    private void addAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addAccountActionPerformed
        NewAccountDialog dialog = new NewAccountDialog(this, true, bank);
        dialog.setVisible(true);
        if (dialog.getAccountOwner() != null) {
            addAccountOwnerToTable(dialog.getAccountOwner());
        }
    }//GEN-LAST:event_addAccountActionPerformed

    //Delete the selected Account
    private void deleteAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteAccountActionPerformed
        int row = table.getSelectedRow();
        if(row >=0) {
        AccountOwner accountOwner = getSelectAccount(row);
        bank.deleteAccount(accountOwner);
        deleteAccountOwnerFromTable(row);
        JOptionPane.showMessageDialog(this, "Account Deleted", "Account Deleted!", JOptionPane.INFORMATION_MESSAGE);

        }
    }//GEN-LAST:event_deleteAccountActionPerformed

    //Open page from where the user can deposit or withdraw
    private void operationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_operationButtonActionPerformed
        int row = table.getSelectedRow();
        AccountOwner accountOwner = getSelectAccount(row);
        if(accountOwner != null) {
            TransactionOperation dialog = new TransactionOperation(this, true, accountOwner, bank);
            dialog.setVisible(true);
            reloadRow(row, accountOwner);
        }
    }//GEN-LAST:event_operationButtonActionPerformed

    //Open the page to show the last 6 transaction of the selected account
    private void showTransactionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showTransactionsActionPerformed
        int row = table.getSelectedRow();
        AccountOwner accountOwner = getSelectAccount(row);
        if(accountOwner != null) {
            TransactionDialog dialog = new TransactionDialog(this, true);
            dialog.setVisible(true);
            reloadRow(row, accountOwner);
        }
        //print all the elements stored in transaction arraylist
        for (int i = 0; i < bank.getTransactions().size();i++) 
	      { 		      
	          System.out.println(bank.getTransactions().get(i)); 		
	      }  
    }//GEN-LAST:event_showTransactionsActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        highlightOnClick(true);
    }//GEN-LAST:event_tableMouseClicked

    //When the user click on some row the buttons are enabled
    private void highlightOnClick(boolean active){
        operationButton.setEnabled(active);
        showTransactions.setEnabled(active);
        deleteAccount.setEnabled(active);
    }
    
    //populate JTable from the elements of the arraylist
    private void reloadRow(int row, AccountOwner accountOwner){
        DefaultTableModel defTab = (DefaultTableModel) table.getModel();
        defTab.setValueAt(accountOwner.getUserName(), row, 0);
        defTab.setValueAt(accountOwner.getAddress(), row, 1);
        defTab.setValueAt(accountOwner.getPostcode(), row, 2);
        defTab.setValueAt(accountOwner.getAccount().getAccountNumber(), row, 3);
        defTab.setValueAt(accountOwner.getAccount().getBalance(), row, 4);
        defTab.setValueAt(accountOwner.getDate(), row, 5);
    }
    
    //Select account row and use account number as key
    private AccountOwner getSelectAccount(int row){
        AccountOwner accountOwner = null;
        if(row >= 0) {
            int accountNumber = (int) table.getValueAt(row, 3);
            accountOwner = bank.getByAccountNumber(accountNumber);
        }
        return accountOwner;
    }
    
    //refresh the tanle with data of the method reloadrow
    private void addAccountOwnerToTable(AccountOwner accountOwner){
        DefaultTableModel defTab = (DefaultTableModel) table.getModel();
        defTab.addRow(new Object[] {});
        reloadRow(defTab.getRowCount() -1, accountOwner);
    }
    
    // simply delete the account and remove the row
    private void deleteAccountOwnerFromTable(int row){
        DefaultTableModel defTab = (DefaultTableModel) table.getModel();
        defTab.removeRow(table.getSelectedRow());
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addAccount;
    private javax.swing.JButton deleteAccount;
    private javax.swing.JMenuItem exit;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton operationButton;
    private javax.swing.JButton showTransactions;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

}
